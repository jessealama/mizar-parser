
begin 

reserve X , Y , Z , x , y , z for set ; 

scheme Separation { A ( ) -> set , P [ set ] } : 
( ex X be set st ( for x be set holds ( ( x in X ) iff ( ( x in A ( ) ) & P [ x ] ) ) ) ) 
proof 
defpred Q [ set , set ] means ( ( $1 = $2 ) & P [ $2 ] ) ; 
A1 : ( for x holds ( for y holds ( for z holds ( ( Q [ x , y ] & Q [ x , z ] ) implies ( y = z ) ) ) ) ) ; 
consider X such that 
A2 : ( for x holds ( ( x in X ) iff ( ex y st ( ( y in A ( ) ) & Q [ y , x ] ) ) ) ) from TARSKI : sch 1 ( A1 ) ; 
take X ; 
let x ; 
( ( x in X ) iff ( ex y st ( ( ( y in A ( ) ) & ( y = x ) ) & P [ x ] ) ) ) by A2 ; 
thus then thesis ; 
end ; 

definition 
let X be set ; 
attr X is empty means 
: Def1 : not ( ex x be set st ( x in X ) ) ; 
end ; 

registration 
cluster empty for set ; 
existence 
proof 
defpred P [ set ] means contradiction ; 
consider Y such that 
A1 : ( ( x in Y ) iff ( ( x in ( the set ) ) & P [ x ] ) ) from Separation ; 
take Y ; 
thus not ( ex x be set st ( x in Y ) ) by A1 ; 
end ; 
end ; 

definition 
func {} -> set equals ( the empty set ) ; 
coherence ; 
let X , Y be set ; 
func X \/ Y -> set means 
: Def3 : ( ( x in it ) iff ( ( x in X ) or ( x in Y ) ) ) ; 
existence 
proof 
take ( union ( { X , Y } ) ) ; 
let x ; 
thus ( ( x in ( union ( { X , Y } ) ) ) implies ( ( x in X ) or ( x in Y ) ) ) 
proof 
assume ( x in ( union ( { X , Y } ) ) ) ; 
then ( ex Z be set st ( ( x in Z ) & ( Z in { X , Y } ) ) ) by TARSKI : def 4 ; 
thus then thesis by TARSKI : def 2 ; 
end ; 
( ( X in { X , Y } ) & ( Y in { X , Y } ) ) by TARSKI : def 2 ; 
thus then thesis by TARSKI : def 4 ; 
end ; 
uniqueness 
proof 
let A1 , A2 be set ; 
assume that 
A3 : ( ( x in A1 ) iff ( ( x in X ) or ( x in Y ) ) ) and 
A4 : ( ( x in A2 ) iff ( ( x in X ) or ( x in Y ) ) ) ; 

now 
let x ; 
( ( x in A1 ) iff ( ( x in X ) or ( x in Y ) ) ) by A3 ; 
thus then ( ( x in A1 ) iff ( x in A2 ) ) by A4 ; 
end ; 
thus then thesis by TARSKI : 1 ; 
end ; 
commutativity ; 
idempotence ; 
func X /\ Y -> set means 
: Def4 : ( ( x in it ) iff ( ( x in X ) & ( x in Y ) ) ) ; 
existence 
proof 
defpred P [ set ] means ( $1 in Y ) ; 
thus ( ex Z be set st ( for x holds ( ( x in Z ) iff ( ( x in X ) & P [ x ] ) ) ) ) from Separation ; 
end ; 
uniqueness 
proof 
let A1 , A2 be set ; 
assume that 
A5 : ( ( x in A1 ) iff ( ( x in X ) & ( x in Y ) ) ) and 
A6 : ( ( x in A2 ) iff ( ( x in X ) & ( x in Y ) ) ) ; 

now 
let x ; 
( ( x in A1 ) iff ( ( x in X ) & ( x in Y ) ) ) by A5 ; 
thus then ( ( x in A1 ) iff ( x in A2 ) ) by A6 ; 
end ; 
thus then thesis by TARSKI : 1 ; 
end ; 
commutativity ; 
idempotence ; 
func X \ Y -> set means 
: Def5 : ( ( x in it ) iff ( ( x in X ) & not ( x in Y ) ) ) ; 
existence 
proof 
defpred P [ set ] means not ( $1 in Y ) ; 
thus ( ex Z be set st ( for x holds ( ( x in Z ) iff ( ( x in X ) & P [ x ] ) ) ) ) from Separation ; 
end ; 
uniqueness 
proof 
let A1 , A2 be set ; 
assume that 
A7 : ( ( x in A1 ) iff ( ( x in X ) & not ( x in Y ) ) ) and 
A8 : ( ( x in A2 ) iff ( ( x in X ) & not ( x in Y ) ) ) ; 

now 
let x ; 
( ( x in A1 ) iff ( ( x in X ) & not ( x in Y ) ) ) by A7 ; 
thus then ( ( x in A1 ) iff ( x in A2 ) ) by A8 ; 
end ; 
thus then thesis by TARSKI : 1 ; 
end ; 
end ; 

definition 
let X , Y be set ; 
func X \+\ Y -> set equals ( ( ( ( X ) \ ( Y ) ) ) \/ ( ( ( Y ) \ ( X ) ) ) ) ; 
correctness ; 
commutativity ; 
pred X misses Y means 
: Def7 : ( ( ( X ) /\ ( Y ) ) = ( {} ) ) ; 
symmetry ; 
pred X c< Y means 
: Def8 : ( ( X c= Y ) & ( X <> Y ) ) ; 
irreflexivity ; 
asymmetry 
proof 
let X ; 
let Y ; 
assume A1 : ( X c= Y ) ; 
assume ( X <> Y ) ; 
assume ( Y c= X ) ; 
then ( for x holds ( ( x in X ) iff ( x in Y ) ) ) by A1 , TARSKI : def 3 ; 
thus then thesis by TARSKI : 1 ; 
end ; 
pred X , Y are_c=-comparable means 
( ( X c= Y ) or ( Y c= X ) ) ; 
reflexivity ; 
symmetry ; 
redefine pred X = Y means 
( ( X c= Y ) & ( Y c= X ) ) ; 
compatibility 
proof 
thus ( ( X = Y ) implies ( ( X c= Y ) & ( Y c= X ) ) ) ; 
assume ( ( X c= Y ) & ( Y c= X ) ) ; 
then ( for x holds ( ( x in X ) iff ( x in Y ) ) ) by TARSKI : def 3 ; 
thus then thesis by TARSKI : 1 ; 
end ; 
end ; 

notation 
let X , Y be set ; 
antonym X meets Y for X misses Y ; 
end ; 

theorem 
  ( ( x in ( ( X ) \+\ ( Y ) ) ) iff not ( ( x in X ) iff ( x in Y ) ) ) 
proof 
( ( x in ( ( X ) \+\ ( Y ) ) ) iff ( ( x in ( ( X ) \ ( Y ) ) ) or ( x in ( ( Y ) \ ( X ) ) ) ) ) by Def3 ; 
thus then thesis by Def5 ; 
end ; 

theorem 
  ( ( for x holds ( not ( x in X ) iff ( ( x in Y ) iff ( x in Z ) ) ) ) implies ( X = ( ( Y ) \+\ ( Z ) ) ) ) 
proof 
assume A1 : ( not ( x in X ) iff ( ( x in Y ) iff ( x in Z ) ) ) ; 

now 
let x ; 
( ( x in X ) iff ( ( ( x in Y ) & not ( x in Z ) ) or ( ( x in Z ) & not ( x in Y ) ) ) ) by A1 ; 
then ( ( x in X ) iff ( ( x in ( ( Y ) \ ( Z ) ) ) or ( x in ( ( Z ) \ ( Y ) ) ) ) ) by Def5 ; 
thus then ( ( x in X ) iff ( x in ( ( Y ) \+\ ( Z ) ) ) ) by Def3 ; 
end ; 
thus then thesis by TARSKI : 1 ; 
end ; 

registration 
cluster ( {} ) -> empty ; 
coherence ; 
end ; 

registration 
let x1 be set ; 
cluster { x1 } -> non empty ; 
coherence 
proof 
( x1 in { x1 } ) by TARSKI : def 1 ; 
thus then ( ex x be set st ( x in { x1 } ) ) ; 
end ; 
let x2 be set ; 
cluster { x1 , x2 } -> non empty ; 
coherence 
proof 
( x1 in { x1 , x2 } ) by TARSKI : def 2 ; 
thus then ( ex x be set st ( x in { x1 , x2 } ) ) ; 
end ; 
end ; 

registration 
cluster non empty for set ; 
existence 
proof 
take { ( the set ) } ; 
thus thesis ; 
end ; 
end ; 

registration 
let D be non empty set ; 
let X be set ; 
cluster ( ( D ) \/ ( X ) ) -> non empty ; 
coherence 
proof 
consider x be set such that 
A1 : ( x in D ) by Def1 ; 
( x in ( ( D ) \/ ( X ) ) ) by A1 , Def3 ; 
thus then ( ex x be set st ( x in ( ( D ) \/ ( X ) ) ) ) ; 
end ; 
cluster ( ( X ) \/ ( D ) ) -> non empty ; 
coherence ; 
end ; 
Lm1 : ( ( X is empty ) implies ( X = ( {} ) ) ) 
proof 
assume not ( ex x st ( x in X ) ) ; 
then ( ( x in ( {} ) ) iff ( x in X ) ) by Def1 ; 
thus then thesis by TARSKI : 1 ; 
end ; 

theorem Th3 : 
  ( ( X meets Y ) iff ( ex x st ( ( x in X ) & ( x in Y ) ) ) ) 
proof 
thus 
now 
assume ( X meets Y ) ; 
then ( ( ( X ) /\ ( Y ) ) <> ( {} ) ) by Def7 ; 
then not ( ( ( X ) /\ ( Y ) ) is empty ) by Lm1 ; 
then consider x such that 
A1 : ( x in ( ( X ) /\ ( Y ) ) ) by Def1 ; 
take x ; 
thus ( ( x in X ) & ( x in Y ) ) by A1 , Def4 ; 
end ; 
given x such that 
A2 : ( ( x in X ) & ( x in Y ) ) ; 
( x in ( ( X ) /\ ( Y ) ) ) by A2 , Def4 ; 
then ( ( ( X ) /\ ( Y ) ) <> ( {} ) ) by Def1 ; 
thus then thesis by Def7 ; 
end ; 

theorem 
  ( ( X meets Y ) iff ( ex x st ( x in ( ( X ) /\ ( Y ) ) ) ) ) 
proof 
thus 
now 
assume ( X meets Y ) ; 
then ( ( ( X ) /\ ( Y ) ) <> ( {} ) ) by Def7 ; 
then not ( ( ( X ) /\ ( Y ) ) is empty ) by Lm1 ; 
then consider x such that 
A1 : ( x in ( ( X ) /\ ( Y ) ) ) by Def1 ; 
take x ; 
thus ( x in ( ( X ) /\ ( Y ) ) ) by A1 ; 
end ; 
assume ( ex x st ( x in ( ( X ) /\ ( Y ) ) ) ) ; 
then ( ( ( X ) /\ ( Y ) ) <> ( {} ) ) by Def1 ; 
thus then thesis by Def7 ; 
end ; 

theorem 
  ( ( ( X misses Y ) & ( x in ( ( X ) \/ ( Y ) ) ) ) implies ( ( ( x in X ) & not ( x in Y ) ) or ( ( x in Y ) & not ( x in X ) ) ) ) by Def3 , Th3 ; 

scheme Extensionality { X , Y ( ) -> set , P [ set ] } : 
( X ( ) = Y ( ) ) 
provided A1 : ( for x holds ( ( x in X ( ) ) iff P [ x ] ) ) and 
A2 : ( for x holds ( ( x in Y ( ) ) iff P [ x ] ) ) proof 
A3 : ( ( x in Y ( ) ) implies ( x in X ( ) ) ) 
proof 
assume ( x in Y ( ) ) ; 
then P [ x ] by A2 ; 
thus then thesis by A1 ; 
end ; 
( ( x in X ( ) ) implies ( x in Y ( ) ) ) 
proof 
assume ( x in X ( ) ) ; 
then P [ x ] by A1 ; 
thus then thesis by A2 ; 
end ; 
thus then thesis by A3 , TARSKI : 1 ; 
end ; 

scheme SetEq { P [ set ] } : 
( for X1 , X2 be set holds ( ( ( for x be set holds ( ( x in X1 ) iff P [ x ] ) ) & ( for x be set holds ( ( x in X2 ) iff P [ x ] ) ) ) implies ( X1 = X2 ) ) ) 
proof 
let X1 , X2 be set ; 
assume that 
A1 : ( for x be set holds ( ( x in X1 ) iff P [ x ] ) ) and 
A2 : ( for x be set holds ( ( x in X2 ) iff P [ x ] ) ) ; 
thus thesis from Extensionality ( A1 , A2 ) ; 
end ; 

begin 

theorem 
  ( ( X c< Y ) implies ( ex x st ( ( x in Y ) & not ( x in X ) ) ) ) 
proof 
assume ( X c< Y ) ; 
then ( not ( for x holds ( ( x in X ) iff ( x in Y ) ) ) & ( X c= Y ) ) by Def8 , TARSKI : 1 ; 
thus then thesis by TARSKI : def 3 ; 
end ; 

theorem 
  ( ( X <> ( {} ) ) implies ( ex x st ( x in X ) ) ) 
proof 
assume A1 : ( X <> ( {} ) ) ; 
assume not ( ex x st ( x in X ) ) ; 
then ( X is empty ) by Def1 ; 
thus then thesis by A1 , Lm1 ; 
end ; 
